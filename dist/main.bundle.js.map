{"version":3,"sources":["/Users/amalshukla/Documents/AMAL/projects/live-stock-data/src async","/Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/app.component.css","/Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/app.component.html","/Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/app.component.ts","/Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/app.module.ts","/Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/shared/components/build-chart/build-chart.component.css","/Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/shared/components/build-chart/build-chart.component.html","/Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/shared/components/build-chart/build-chart.component.ts","/Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/shared/constants/shared.constants.ts","/Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/shared/models/market-price.model.ts","/Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/shared/services/shared.service.ts","/Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/shared/shared.module.ts","/Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/socket-handler.service.ts","/Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/stock.model.ts","/Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/stock.service.ts","/Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/environments/environment.ts","/Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/amalshukla/Documents/AMAL/projects/live-stock-data/src async\n// module id = ../../../../../src async recursive\n// module chunks = 2","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 2","module.exports = \"<div class=\\\"bg-wrapper\\\">\\n  <div class=\\\"table-wrapper\\\">\\n    <h2 class=\\\"text-center\\\">\\n      Live Stock Data\\n    </h2>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-5\\\">\\n        <h3 class=\\\"text-center\\\" *ngIf=\\\"marketPositions?.length\\\" >\\n          Selected Stock - <strong>{{selectedStock}}</strong>\\n        </h3>\\n        <app-build-chart *ngIf=\\\"marketPositions?.length;else noGraph\\\" [marketStatus]=\\\"marketPositions\\\">\\n        </app-build-chart>\\n        <ng-template #noGraph>\\n          <div class=\\\"no-graph-container\\\">\\n            <img src=\\\"https://cdn.onlinewebfonts.com/svg/img_524631.png\\\" alt=\\\"\\\">\\n            <span class=\\\"helper-text\\\">\\n              Please click on any row to get historical data for any stock.\\n            </span>\\n          </div>\\n        </ng-template>\\n      </div>\\n      <div class=\\\"col-md-7\\\">\\n        <table class=\\\"table table-bordered\\\">\\n          <thead>\\n            <tr>\\n              <th><i class=\\\"fa fa-barcode\\\"></i> Serial No.</th>\\n              <th><i class=\\\"fa fa-bar-chart\\\" aria-hidden=\\\"true\\\"></i>Ticker</th>\\n              <th><i class=\\\"fa fa-money\\\" aria-hidden=\\\"true\\\"></i>Price</th>\\n              <th><i class=\\\"fa fa-clock-o\\\" aria-hidden=\\\"true\\\"></i>Last Updated</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <!-- Dynamically handling stock data -->\\n            <tr (click)=\\\"showCurrentStockGraph(currentStock)\\\" class=\\\"clickable\\\" *ngFor=\\\"let currentStock of stockArray,let i = index\\\">\\n              <th scope=\\\"row\\\">{{i+1}}</th>\\n              <td>{{currentStock.name}}</td>\\n              <!-- Assigning background color based on current stock value -->\\n              <td class=\\\"text-white\\\" [ngClass]=\\\"{'bg-success ': currentStock?.isCurrentValueMore, \\n                  'bg-danger ': currentStock?.isCurrentValueLess}\\\">\\n                <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-caret-up text-success': currentStock?.isCurrentValueMore, \\n                    'fa-caret-down text-danger': currentStock?.isCurrentValueLess}\\\"></i>\\n                {{currentStock.price}}\\n              </td>\\n              <td>{{currentStock?.lastUpdated}}</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 2","// angular default imports\nimport { Component } from '@angular/core';\n\n// app constants and models\nimport { Stock } from './stock.model';\nimport { SharedConstants } from './shared/constants/shared.constants';\nimport { MarketPrice } from './shared/models/market-price.model';\n\n// app services\nimport { SocketHandlerService } from './socket-handler.service';\nimport { StockService } from './stock.service';\nimport { SharedService } from './shared/services/shared.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  stockArray = [];\n  timeConstants = SharedConstants.TIME_CONSTANTS;\n  marketPositions = [];\n  selectedStock;\n  constructor(private shService: StockService, private sharedService: SharedService) {\n    //calling stock service to get stocks in [name,price] format\n    shService.messages.subscribe(msg => {\n\n      this.handleStocks(msg);\n    });\n  }\n\n  //main function to handle stocks\n  handleStocks(stockData) {\n    //stockData is the current stock sent by websocket\n    stockData.forEach(currentStock => {\n      // check if stock already exists\n      let indexOfStock = this.getStockIndexInArray(currentStock, this.stockArray);\n      if (indexOfStock > -1) {\n        //check if the current value of stock is higher than previous\n        if (this.stockArray[indexOfStock].price - currentStock[1] < 0) {\n\n          this.stockArray[indexOfStock].isCurrentValueMore = true;\n          this.stockArray[indexOfStock].isCurrentValueLess = false;\n\n        }\n        else if (this.stockArray[indexOfStock].price - currentStock[1] > 0) {\n          this.stockArray[indexOfStock].isCurrentValueMore = false;\n          this.stockArray[indexOfStock].isCurrentValueLess = true;\n\n        }\n        //updating price of stock\n        this.stockArray[indexOfStock].price = currentStock[1];\n        //updating updation time for stock\n        this.stockArray[indexOfStock].lastUpdated = this.setStockUpdateTime(this.stockArray[indexOfStock]);\n        this.stockArray[indexOfStock].lastUpdatedTime = this.sharedService.formatTimeLocal();\n        this.stockArray[indexOfStock].priceHistory.push(this.createShare(currentStock));\n      }\n      else {\n        //if stock is a new entry, then creating it's entry in array\n        let stock = new Stock();\n        stock.name = currentStock[0];\n        stock.price = currentStock[1];\n        stock.isFirstValue = true;\n        stock.lastUpdatedTime = this.sharedService.formatTimeLocal();\n        stock.lastUpdated = this.sharedService.formatAMPM();\n        stock.priceHistory = [];\n        stock.priceHistory.push(this.createShare(currentStock));\n        this.stockArray.push(stock);\n      }\n    });\n\n  }\n\n  //get index of stock in stock array\n  getStockIndexInArray(obj, list) {\n    let indexOfStock = list.findIndex(i => i.name === obj[0]);\n    return indexOfStock;\n  }\n\n\n  //update stock time as per current entry\n  setStockUpdateTime(stock) {\n    let date = new Date();\n    let h = date.getHours();\n    let m: any = date.getMinutes();\n    let stockTimeHour = stock.lastUpdatedTime.split(':')[0];\n    let stockTimeMinutes = stock.lastUpdatedTime.split(':')[1];\n\n    //check if the newest entry time is same as last updated time\n    if (h == stockTimeHour && m == stockTimeMinutes) {\n      //currently this value is hardcoded - can be made dynamic\n      return this.timeConstants.UPDATED_NOW;\n    }\n    else {\n\n      return this.sharedService.formatAMPM();\n    }\n  }\n\n  showCurrentStockGraph(currentStock) {\n    this.marketPositions = currentStock.priceHistory;\n    this.selectedStock = currentStock.name;\n  }\n\n  createShare(stock) {\n    let share = new MarketPrice();\n    share.date = new Date();\n    share.open = stock[1];\n    return share;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\n\nimport { SharedModule } from './shared/shared.module';\n\nimport { SocketHandlerService } from './socket-handler.service';\nimport { StockService } from './stock.service';\nimport { AppComponent } from './app.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AngularFontAwesomeModule,\n    SharedModule\n  ],\n  providers: [ SocketHandlerService, StockService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/app.module.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/shared/components/build-chart/build-chart.component.css\n// module id = ../../../../../src/app/shared/components/build-chart/build-chart.component.css\n// module chunks = 2","module.exports = \"<div #chart></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/shared/components/build-chart/build-chart.component.html\n// module id = ../../../../../src/app/shared/components/build-chart/build-chart.component.html\n// module chunks = 2","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewChild } from '@angular/core';\nimport * as d3 from 'd3';\n\nimport { MarketPrice } from './../../models/market-price.model';\n\n@Component({\n  selector: 'app-build-chart',\n  templateUrl: './build-chart.component.html',\n  styleUrls: ['./build-chart.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BuildChartComponent implements OnChanges {\n  @ViewChild('chart')\n  chartElement: ElementRef;\n\n  parseDate = d3.timeParse('%d-%m-%Y');\n\n  @Input()\n  marketStatus: MarketPrice[];\n\n  private svgElement: HTMLElement;\n  private chartProps: any;\n\n  constructor() { }\n\n\n  ngOnChanges() { \n    if(this.marketStatus){\n      // destroying the previous chart\n      d3.select(this.chartElement.nativeElement).selectAll('svg').remove();\n      this.buildChart();\n    }\n  }\n\n  formatDate() {\n    this.marketStatus.forEach(ms => {\n      if (typeof ms.date === 'string') {\n        ms.date = this.parseDate(ms.date);\n      }\n    });\n  }\n  buildChart() {\n    this.chartProps = {};\n    this.formatDate();\n\n    // Set the dimensions of the canvas / graph\n    var margin = { top: 30, right: 20, bottom: 30, left: 50 },\n      width = 600 - margin.left - margin.right,\n      height = 270 - margin.top - margin.bottom,\n      timeFormat = d3.timeFormat(\"%I:%M %p %a %Y\");;\n\n    // Set the ranges\n    this.chartProps.x = d3.scaleTime().range([0, width]);\n    this.chartProps.y = d3.scaleLinear().range([height, 0]);\n\n    // Define the axes\n    var xAxis = d3.axisBottom(this.chartProps.x);\n    var yAxis = d3.axisLeft(this.chartProps.y).ticks(5);\n\n    let _this = this;\n\n    // Define the line\n    var valueline2 = d3.line<MarketPrice>()\n      .x(function (d) {\n        if (d.date instanceof Date) {\n          return _this.chartProps.x(d.date.getTime());\n        }\n      })\n      .y(function (d) { return _this.chartProps.y(d.open); });\n\n    var svg = d3.select(this.chartElement.nativeElement)\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Scale the range of the data\n    this.chartProps.x.domain(\n      d3.extent(_this.marketStatus, function (d) {\n        if (d.date instanceof Date)\n          return (d.date as Date).getTime();\n      }));\n    this.chartProps.y.domain([0, d3.max(this.marketStatus, function (d) {\n      return Math.max(d.open);\n    })]);\n\n    // Add the valueline2 path.\n    svg.append('path')\n      .attr('class', 'line line2')\n      .style('stroke', 'green')\n      .style('fill', 'none')\n      .attr('d', valueline2(_this.marketStatus));\n\n    // Add the X Axis\n    svg.append('g')\n      .attr('class', 'x axis')\n      .attr('transform', `translate(0,${height})`)\n      .call(xAxis);\n\n    // Add the Y Axis\n    svg.append('g')\n      .attr('class', 'y axis')\n      .call(yAxis);\n\n    // Setting the required objects in chartProps so they could be used to update the chart\n    this.chartProps.svg = svg;\n    this.chartProps.valueline2 = valueline2;\n    this.chartProps.xAxis = xAxis;\n    this.chartProps.yAxis = yAxis;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/shared/components/build-chart/build-chart.component.ts","export class SharedConstants {\n    public static TIME_CONSTANTS = {\n        'UPDATED_NOW': 'Few seconds ago'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/shared/constants/shared.constants.ts","export class MarketPrice{\n    open: number;\n    date: string | Date;\n}\n\n\n// WEBPACK FOOTER //\n// /Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/shared/models/market-price.model.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SharedService {\n\n  constructor() { }\n\n  //convert default time in the format hh:mm:ss\n  formatTimeLocal() {\n    let dt = new Date();\n    return dt.toLocaleTimeString();\n  }\n\n  //convert time in 12 hour format\n  formatAMPM() {\n    let date = new Date();\n    let hours = date.getHours();\n    let minutes: any = date.getMinutes();\n    let ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    var strTime = hours + ':' + minutes + ' ' + ampm;\n    return strTime;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/shared/services/shared.service.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedService } from './services/shared.service';\nimport { BuildChartComponent } from './components/build-chart/build-chart.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [BuildChartComponent],\n  providers:[SharedService],\n  exports: [BuildChartComponent]\n})\nexport class SharedModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/shared/shared.module.ts","import { Injectable } from '@angular/core';\nimport * as Rx from 'rxjs/Rx';\n\n@Injectable()\nexport class SocketHandlerService {\n  \n  //Service for connecting to websocket url\n\n  constructor() { }\n  private subject: Rx.Subject<MessageEvent>;\n\n  public connect(url): Rx.Subject<MessageEvent> {\n    if (!this.subject) {\n      this.subject = this.create(url);\n      console.log(\"Successfully connected: \" + url);\n    }\n    return this.subject;\n  }\n\n  private create(url): Rx.Subject<MessageEvent> {\n    let ws = new WebSocket(url);\n\n    let observable = Rx.Observable.create(\n      (obs: Rx.Observer<MessageEvent>) => {\n        ws.onmessage = obs.next.bind(obs);\n        ws.onerror = obs.error.bind(obs);\n        ws.onclose = obs.complete.bind(obs);\n        return ws.close.bind(ws);\n      })\n    let observer = {\n      next: (data: Object) => {\n        if (ws.readyState === WebSocket.OPEN) {\n          ws.send(JSON.stringify(data));\n        }\n      }\n    }\n    return Rx.Subject.create(observer, observable);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/socket-handler.service.ts","export class Stock{\n    name: string;\n    price: string;\n    lastUpdatedTime:string;\n    lastUpdated:string;\n    isFirstValue:boolean;\n    isCurrentValueMore:boolean = false;\n    isCurrentValueLess:boolean = false;\n    priceHistory:Array<any>;\n}\n\n\n// WEBPACK FOOTER //\n// /Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/stock.model.ts","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs/Rx';\nimport { SocketHandlerService } from './socket-handler.service';\n\nexport interface Message {\n  name: string,\n  price: string\n}\nconst STOCK_URL = 'ws://stocks.mnet.website';\n\n@Injectable()\nexport class StockService {\n\n  public messages: Subject<Message>;\n\n  //service to send current stock data returned from websocket\n  \n  constructor(shService: SocketHandlerService) {\n\t\tthis.messages = <Subject<Message>>shService\n\t\t\t.connect(STOCK_URL)\n\t\t\t.map((response: MessageEvent): Message => {\n        let data = JSON.parse(response.data);\n\t\t\t\treturn data;\n\t\t\t});\n\t}\n\n}\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/app/stock.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/amalshukla/Documents/AMAL/projects/live-stock-data/src/main.ts"],"sourceRoot":"webpack:///"}